name: run tests
on:
  push:
    branches: [ ci-linux ]
jobs:
  macos:
    runs-on: macos-12
    #if: github.event_name != 'schedule'
    if: false
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Setup Python environment
        uses: actions/setup-python@v4.3.1
        with:
          python-version: '3.9'
      - name: Get runner specifications
        run: system_profiler SPHardwareDataType
      - name: Check without sanitizer
        uses: ./.github/actions/build_and_check
        with:
          asan: false
          ubsan: false
        env:
          build_procs: 3
          check_procs: 3

  macos_sanitizers:
    permissions:
      contents: read # to fetch code (actions/checkout)
      issues: write # to create an issue

    runs-on: macos-12
    #if: (github.event_name == 'schedule' && github.repository == 'espressomd/espresso')
    if: false
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Setup Python environment
        uses: actions/setup-python@v4.3.1
        with:
          python-version: '3.9'
      - name: Get runner specifications
        run: system_profiler SPHardwareDataType
      - name: Check with sanitizer
        uses: ./.github/actions/build_and_check
        with:
          asan: true
          ubsan: true
        env:
          build_procs: 3
          check_procs: 3
      - name: Setting job link variable
        if: ${{ failure() }}
        run: |
          echo "job_link=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" >> $GITHUB_ENV
      - uses: alialaa/issue-action@v1
        if: ${{ failure() }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: Scheduled CI job has failed
          body: ${{ env.job_link }}

  debian:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/jngrad/espresso-docker/debian:09588f49ff226c29fb7cffec4240344902468f76_base_layer
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.github_token }}
      options: --cpus 2
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Setup Git environment
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Get runner specifications
        run: lscpu | egrep 'Model name|Socket|Thread|NUMA|CPU\(s\)'
      - name: Build and check
        uses: ./.github/actions/build_and_check
        with:
          asan: false
          ubsan: false
        env:
          build_procs: 2
          check_procs: 2
          myconfig: 'maxset'
          with_cuda: 'false'
          with_hdf5: 'true'
          with_fftw: 'true'
          with_gsl: 'false'
          with_scafacos: 'false'
          with_stokesian_dynamics: 'false'
          make_check_unit_tests: 'true'
          make_check_python: 'false'
          OMPI_ALLOW_RUN_AS_ROOT: 1
          OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1

  ubuntu-without-dependencies:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/jngrad/espresso-docker/ubuntu-wo-dependencies:09588f49ff226c29fb7cffec4240344902468f76_base_layer
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.github_token }}
      options: --cpus 2
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Setup Git environment
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Get runner specifications
        run: lscpu | egrep 'Model name|Socket|Thread|NUMA|CPU\(s\)'
      - name: Build and check
        uses: ./.github/actions/build_and_check
        with:
          asan: false
          ubsan: false
        env:
          build_procs: 2
          check_procs: 2
          myconfig: 'maxset'
          with_cuda: 'false'
          with_hdf5: 'false'
          with_fftw: 'false'
          with_gsl: 'false'
          with_scafacos: 'false'
          with_stokesian_dynamics: 'false'
          make_check_unit_tests: 'false'
          make_check_python: 'false'
          OMPI_ALLOW_RUN_AS_ROOT: 1
          OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
